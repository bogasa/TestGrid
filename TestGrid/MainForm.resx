<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAAAAAAAAAAAAAEAAAAFAAAACAAAAAsAAAALAAAACwAAAAsAAAAJAAAABgAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAsAAAALAAAACwAA
        AAsAAAALAAAACAAAAAUAAAABAAAABwAAABUAAAAmAAAAMAAAADQAAAA0AAAAMAAAACkAAAAbAAAAEAAA
        AAkAAAACAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAACAAAACAAAABAAAAAcAAAAKgAA
        ADEAAAA0AAAANAAAADAAAAAoAAAAFQAAAAcAAAALpKSkkKampv+QkJD/kJCQ/5CQkP+QkJD/iYmJ9AAA
        AEkAAAAzAAAAJQAAABYAAAAOAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADgAAABgAAAAnAAAANQAA
        AEqqqqrvkZGR/5CQkP+QkJD/kJCQ/5CQkP+EhISZAAAADQAAAAuUlJR0y8vL/9/f3//c3Nz/29vb/9nZ
        2f+ioqL/FRUVigAAAGgAAABRAAAAQgAAADYAAAAvAAAALwAAAC8AAAAvAAAALwAAAC8AAAA3AAAARwAA
        AFUAAABqEhISh8fHx//b29v/3Nzc/93d3f/X19f/uLi4/4CAgHoAAAALAAAAB4SEhEfHx8f/4ODg/93d
        3f/a2tr/3d3d/6ioqP8xMTG5AAAAlQAAAHkAAABgAAAAWgAAAFcAAABWAAAAVgAAAFYAAABWAAAAVwAA
        AF4AAABlAAAAeQAAAJU0NDS1x8fH/93d3f/d3d3/39/f/9bW1v+wsLD/dnZ2UAAAAAcAAAADWlpaGsPD
        w//e3t7/3t7e/9ra2v/d3d3/ra2t/1JSUtQZGRm0BAQEiQAAAGEAAABIAAAARQAAAEMAAABEAAAARAAA
        AEEAAABCAAAARQAAAGAEBASJGhoas15eXtPIyMj/29vb/93d3f/e3t7/1tbW/6mpqf9dXV0gAAAAAwAA
        AAEAAAAHvb295NnZ2f/d3d3/19fX/9fX1/+zs7P/eXl5/1dXV/8jIyOPAAAASAAAACcAAAAZAAAAGAAA
        ABcAAAAXAAAAFQAAABcAAAAlAAAARyAgIIpXV1f/iYmJ/8rKyv/c3Nz/3t7e/93d3f/Z2dn/oqKi7wAA
        AAcAAAABAAAAAAAAAAO4uLi71NTU/9zc3P/Z2dn/09PT/7u7u/9/f3//UlJS/zw8PIsAAAAjAAAADwAA
        AAUAAAAEAAAABAAAAAQAAAAEAAAABQAAAA4AAAAjOzs7hlJSUv+VlZX/zc3N/9zc3P/f39//3d3d/9LS
        0v+dnZ3DAAAAAwAAAAAAAAAAAAAAAbi4uJXQ0ND/2tra/9ra2v/T09P/xMTE/4eHh/9NTU3/SUlJnwAA
        AAsAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAtISEiWTU1N/6Kiov/Pz8//1dXV/97e
        3v/g4OD/ycnJ/5ycnJsAAAABAAAAAAAAAAAAAAAAtra2bcjIyP/T09P/2tra/9bW1v/V1dX/jY2N/0hI
        SP9HR0fEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUdHR7tHR0f/rKys/83N
        zf/Q0ND/3d3d/9/f3/+6urr/mpqadgAAAAAAAAAAAAAAAAAAAAC0tLRIv7+//9DQ0P/e3t7/19fX/9nZ
        2f+np6f/iYmJ/4KCgv+CgoL/goKC/4KCgv+CgoL/goKC/4KCgv+CgoL/goKC/4KCgv+CgoL/goKC/5mZ
        mf+5ubn/z8/P/9LS0v/a2tr/4eHh/6ysrP+YmJhOAAAAAAAAAAD///8A////ALGxsSG3t7f/1dXV/93d
        3f/U1NT/1dXV/9TU1P/Hx8f/urq6/7i4uP+5ubn/urq6/7q6uv+6urr/urq6/7a2tv+4uLj/ubm5/7m5
        uf+6urr/xcXF/9fX1//S0tL/09PT/9bW1v/h4eH/oqKi/5aWlir///8A////AP///wD///8Arq6uA66u
        rvnW1tb/1tbW/8/Pz//X19f/xsbG/3Z2dv9MTEz/bGxsb66urjOurq4zrq6uM66urjOurq4zrq6uM66u
        rjOurq4zcHBwaExMTP90dHT/xcXF/9fX1//U1NT/2dnZ/93d3f+VlZX8lZWVBv///wD///8A////AP//
        /wAAAAAAnJyc2cPDw//Hx8f/x8fH/8fHx/+qqqr/YWFh/y0tLf8tLS16AAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMsLCxxLS0t/21tbf+1tbX/ycnJ/8XFxf/IyMj/xMTE/4SEhOEAAAAB////AP//
        /wD///8A////AAAAAACEhIS7o6Oj/6+vr/+xsbH/ra2t/5ycnP9eXl7/KSkp/ykpKaUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8A////ACkpKZ8pKSn/cnJy/6CgoP+vr6//rq6u/6+vr/+dnZ3/cHBww///
        /wD///8A////AP///wD///8AAAAAAHBwcJ2CgoL/lJSU/5SUlP+RkZH/i4uL/1hYWP8kJCT/JCQk0gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8AJCQkzCQkJP9ra2v/iYmJ/5CQkP+Ojo7/kJCQ/3Z2
        dv9fX1+i////AP///wD///8A////AP///wAAAAAAWFhYg1RUVP9kZGT/YGBg/2RkZP9iYmL/PT09/yMj
        I/8hISH5ISEhBgAAAAAAAAAAAAAAAAAAAAAAAAAA////ACEhIQMhISH2IyMj/0xMTP9iYmL/YWFh/2Bg
        YP9fX1//S0tL/0tLS4z///8A////AP///wD///8AERERwg0NDf8NDQ3/EkRa/xVrkP8Va5D/FWuQ/xRk
        hv8NDg7/DQ0N/w0NDf8NDQ3/EkRa/xVrkP8Va5D/FWuQ/xRkhv8NDg7/DQ0N/w0NDf8NDQ3/EkRa/xVr
        kP8Va5D/FWuQ/xRkhv8NDg7/DQ0N/wwMDP8MDAzC////AP///wAhISL/GBgY/xgYGP8aRFX/H6/m/x+v
        5v8fr+b/H6/m/xk0P/8YGBj/GBgY/xgYGP8aRFX/H6/m/x+v5v8fr+b/H6/m/xk0P/8YGBj/GBgY/xgY
        GP8aRFX/H6/m/x+v5v8fr+b/H6/m/xk0P/8YGBj/FxcX/xISEv////8A////ACYmKP8bGxv/Gxsb/xsi
        Jf8cs+f/HLXp/xy16f8cten/G2N8/xsbG/8bGxv/Gxsb/xsiJf8cs+f/HLXp/xy16f8cten/G2N8/xsb
        G/8bGxv/Gxsb/xsiJf8cs+f/HLXp/xy16f8cten/G2N8/xsbG/8bGxv/FRUV/////wD///8AKior/x8f
        H/8fHx//Hx8f/xqWvP8Yu+z/GLvs/xi77P8akbX/Hx8f/x8fH/8fHx//Hx8f/xqWvP8Yu+z/GLvs/xi7
        7P8akbX/Hx8f/x8fH/8fHx//Hx8f/xqWvP8Yu+z/GLvs/xi77P8akbX/Hx8f/x8fH/8YGBj/////AP//
        /wAtMzX/IiIi/yIiIv8iIiL/HHGI/xXB8P8VwfD/FcHw/xW76f8iKCn/IiIi/yIiIv8iIiL/HHGI/xXB
        8P8VwfD/FcHw/xW76f8iKCn/IiIi/yIiIv8iIiL/HHGI/xXB8P8VwfD/FcHw/xW76f8iKCn/IiIi/xoa
        Gv////8A////ACtbZv8mJib/JiYm/yYmJv8hTFb/Ecfz/xHH8/8Rx/P/Ecfz/yBSXf8mJib/JiYm/yYm
        Jv8hTFb/Ecfz/xHH8/8Rx/P/Ecfz/yBSXf8mJib/JiYm/yYmJv8hTFb/Ecfz/xHH8/8Rx/P/Ecfz/yBS
        Xf8mJib/HR0d/////wD///8AJoac/ykpKf8pKSn/KSkp/ykrK/8Qw+r/Ds32/w7N9v8Ozfb/G4CW/ykp
        Kf8pKSn/KSkp/ykrK/8Qw+r/Ds32/w7N9v8Ozfb/G4CW/ykpKf8pKSn/KSkp/ykrK/8Qw+r/Ds32/w7N
        9v8Ozfb/G4CW/ykpKf8fHx//////AP///wAguNX/MTEx/y0tLf8tLS3/LS0t/xahvP8M0vj/DNL4/wzS
        +P8Ss9L/LS0t/y0tLf8tLS3/LS0t/xahvP8M0vj/DNL4/wzS+P8Ss9L/LS0t/y0tLf8tLS3/LS0t/xah
        vP8M0vj/DNL4/wzS+P8Ss9L/Li4u/yQkJP////8A////AFHc5uFjeH7/ZmZp/2Zmaf9mZmn/U8DI/zXs
        /f817P3/Nez9/zXs/P9id3v/ZmZp/2Zmaf9mZmn/U8DI/zXs/f817P3/Nez9/zXs/P9id3v/ZmZp/2Zm
        af9mZmn/U8DI/zXs/f817P3/Nez9/zXs/P9gdXr/ZGRl4f///wD///8AChASqAoKCvIKCgryCgoJ8gkq
        NPIJQlTyCUJU8glEV/IKN0byCxET8goKCvIKCgryCgoJ8gkqNPIJQlTyCUJU8glEV/IKN0byCxET8goK
        CvIKCgryCgoJ8gkqNPIJQlTyCUJU8glEV/IKN0byCxET8goKCvIKCgp7////AP///wD///8ACgoKjwkK
        Cs4EHSL4Aysz+AMpMfgDKTH4BCIo+AgLC/gJCAj4CQkJ+AgJCfgEHSL4Aysz+AMpMfgDKTH4BCIo+AgL
        C/gJCAj4CQkJ+AgJCfgEHSL4Aysz+AMpMfgDKTH4BCIo+AgLC/gKCAjPCgoKZ////wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8AwP//AwA//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAPAAcAP
        8APAAAADwAAAA8AAAAPgAAAD4A/wB+AP8AfgB+AHgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAcAAAAP///////////////8=
</value>
  </data>
</root>